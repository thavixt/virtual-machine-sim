@import 'tailwindcss';

@theme {
  --color-t-color1: whitesmoke;
  --color-t-color2: #c83e4d;
  --color-t-color3: #f4b860;
  --color-t-color4: #32373b;
  --color-t-color5: #4a5859;

  --animate-appear: appear 0.35s ease-in-out;
}

@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 100;
  }
}


/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

#root {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  @apply text-t-color4 font-sans fixed left-0 right-0 z-40;
}

#background {
  @apply fixed left-0 right-0 z-0 block size-full bg-no-repeat bg-cover grayscale;
  background-image: url('./assets/background.png');
}

* {
  @apply focus:outline-blue-400 focus:outline-2
}

*:disabled {
  @apply opacity-30 cursor-not-allowed
}

a {
  @apply text-t-color2 hover:text-t-color3 font-bold;
}

h1 {
  @apply text-5xl font-serif;
}

code {
  @apply bg-slate-800 text-slate-200 px-1 rounded-md
}

/* box */

.containerBox {
  @apply bg-t-color1 rounded-md shadow-lg mx-2 mt-1 p-2;
}

/* buttons */

button {
  @apply cursor-pointer;
}

button.start {
  @apply bg-green-600
}

button.stop,
button.reset {
  @apply bg-t-color2
}

button.inverse {
  @apply text-t-color5  bg-gray-100 border-t-color5 border
}

button {
  @apply text-t-color1 bg-t-color4  hover:opacity-75 hover:shadow-md rounded-md px-2 h-8
}

/* inputs */

input, textarea {
  @apply bg-gray-600 text-t-color1 px-2 py-1 rounded-md font-mono;
}

select {
  @apply border border-slate-800 rounded-md bg-gray-600 text-t-color1 font-mono whitespace-pre;
}

/* React Flow styles */

.react-flow-custom {
  @apply text-t-color4;
  /* React Flow style vars */
  --xy-background-color: whitesmoke;
}

.rf-node_active {
  @apply bg-t-color3!;
}

.rf-node_default {
  @apply text-t-color4!
}

.rf-node_active.rf-node_halt {
  @apply bg-t-color2! text-t-color1!
}

/* Spinner SVG */
.spinner {
  @apply stroke-t-color4 ;
  stroke-width: 4;
  transform-origin: center;
}

.spinner.circle {
  @apply fill-t-color5;
}

.spinner.rect {
  @apply fill-t-color3;
  fill-opacity: 0.5;
  animation: spinnerRotation 2s infinite alternate-reverse;
}

.spinner.hex {
  @apply fill-t-color2;
  animation: spinnerRotation 2s infinite;
}

@keyframes spinnerRotation {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(359deg);
  }
}
